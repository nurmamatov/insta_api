basePath: /v1
definitions:
  comment_proto.CreateCommentReq:
    properties:
      post_id:
        type: string
      text:
        type: string
      user_id:
        type: string
    type: object
  comment_proto.DeleteCommentReq:
    properties:
      comment_id:
        type: string
      user_id:
        type: string
    type: object
  comment_proto.Empty:
    type: object
  comment_proto.Res:
    properties:
      comment_id:
        type: string
      created_at:
        type: string
      post_id:
        type: string
      text:
        type: string
      user_id:
        type: string
    type: object
  comment_proto.UpdateCommentReq:
    properties:
      comment_id:
        type: string
      post_id:
        type: string
      text:
        type: string
      user_id:
        type: string
    type: object
  models.Err:
    properties:
      error:
        type: string
    type: object
  post_proto.Bool:
    properties:
      result:
        type: boolean
    type: object
  post_proto.Comment:
    properties:
      comment_id:
        type: string
      text:
        type: string
      user_id:
        type: string
    type: object
  post_proto.CreatePostReq:
    properties:
      description:
        type: string
      image:
        type: string
      title:
        type: string
      user_id:
        type: string
    type: object
  post_proto.DeletePostReq:
    properties:
      post_id:
        type: string
      user_id:
        type: string
    type: object
  post_proto.GetPostReq:
    properties:
      post_id:
        type: string
    type: object
  post_proto.GetPostRes:
    properties:
      check_like:
        type: boolean
      comments:
        items:
          $ref: '#/definitions/post_proto.Comment'
        type: array
      created_at:
        type: string
      description:
        type: string
      image:
        type: string
      likes:
        type: integer
      post_id:
        type: string
      title:
        type: string
      user_id:
        type: string
    type: object
  post_proto.LikeDeleteReq:
    properties:
      post_id:
        type: string
      user_id:
        type: string
    type: object
  post_proto.LikePostReq:
    properties:
      post_id:
        type: string
      user_id:
        type: string
    type: object
  post_proto.ListPostsRes:
    properties:
      posts:
        items:
          $ref: '#/definitions/post_proto.GetPostRes'
        type: array
    type: object
  post_proto.Message:
    properties:
      message:
        type: string
    type: object
  post_proto.UpdatePostReq:
    properties:
      description:
        type: string
      post_id:
        type: string
      title:
        type: string
    type: object
  user_proto.Comment:
    properties:
      comment_id:
        type: string
      text:
        type: string
      user_id:
        type: string
    type: object
  user_proto.CreateUserReq:
    properties:
      email:
        type: string
      first_name:
        type: string
      gender:
        type: boolean
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      photo:
        type: string
      username:
        type: string
    type: object
  user_proto.DeleteUserReq:
    properties:
      password:
        type: string
      user_id:
        type: string
    type: object
  user_proto.Err:
    properties:
      error:
        type: string
    type: object
  user_proto.GetUserRes:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      gender:
        type: boolean
      last_name:
        type: string
      phone:
        type: string
      photo:
        type: string
      posts:
        items:
          $ref: '#/definitions/user_proto.Posts'
        type: array
      user_id:
        type: string
      username:
        type: string
    type: object
  user_proto.LoginReq:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  user_proto.Message:
    properties:
      message:
        type: string
    type: object
  user_proto.Posts:
    properties:
      check_like:
        type: boolean
      comments:
        items:
          $ref: '#/definitions/user_proto.Comment'
        type: array
      created_at:
        type: string
      description:
        type: string
      image:
        type: string
      likes:
        type: integer
      post_id:
        type: string
      title:
        type: string
      user_id:
        type: string
    type: object
  user_proto.SearchRes:
    properties:
      user_id:
        type: string
      username:
        type: string
    type: object
  user_proto.UpdatePass:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
      user_id:
        type: string
    type: object
  user_proto.UpdateUserReq:
    properties:
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      last_name:
        type: string
      phone:
        type: string
      photo:
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
  user_proto.UserList:
    properties:
      users:
        items:
          $ref: '#/definitions/user_proto.SearchRes'
        type: array
    type: object
info:
  contact: {}
  description: this is a user, post and comment services api
  version: "1.0"
paths:
  /comment/create:
    post:
      consumes:
      - application/json
      description: This method create new comment
      parameters:
      - description: Create Comment
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/comment_proto.CreateCommentReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/comment_proto.Res'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Err'
      summary: Create New Comment
      tags:
      - Comment
  /comment/delete:
    put:
      consumes:
      - application/json
      description: This method Delete comment
      parameters:
      - description: Delete Comment
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/comment_proto.DeleteCommentReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/comment_proto.Empty'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Err'
      summary: Delete Comment
      tags:
      - Comment
  /comment/update:
    put:
      consumes:
      - application/json
      description: This method Update comment
      parameters:
      - description: Update Comment
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/comment_proto.UpdateCommentReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/comment_proto.Res'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Err'
      summary: Update Comment
      tags:
      - Comment
  /list/{id}/posts:
    get:
      consumes:
      - application/json
      description: This method for list user posts
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post_proto.ListPostsRes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Err'
      summary: List user posts
      tags:
      - Post
  /login:
    put:
      consumes:
      - application/json
      description: This method for Login
      parameters:
      - description: Login User
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/user_proto.LoginReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user_proto.GetUserRes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/user_proto.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user_proto.Err'
      summary: Login User
      tags:
      - User
  /post/create:
    post:
      consumes:
      - application/json
      description: This method create new post
      parameters:
      - description: Create Post
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/post_proto.CreatePostReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/post_proto.GetPostRes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Err'
      summary: Create New Post
      tags:
      - Post
  /post/delete:
    put:
      consumes:
      - application/json
      description: This method for Delete Post
      parameters:
      - description: Delete Post
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/post_proto.DeletePostReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post_proto.Message'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Err'
      summary: Delete Post
      tags:
      - Post
  /post/get:
    put:
      consumes:
      - application/json
      description: This method for Get Post
      parameters:
      - description: Get Post
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/post_proto.GetPostReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post_proto.GetPostRes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Err'
      summary: Get Post
      tags:
      - Post
  /post/like:
    delete:
      consumes:
      - application/json
      description: This method for Delete Like
      parameters:
      - description: Delete Like
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/post_proto.LikeDeleteReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post_proto.Bool'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Err'
      summary: Delete Like
      tags:
      - Post
    post:
      consumes:
      - application/json
      description: This method for Like Post
      parameters:
      - description: Like Post
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/post_proto.LikePostReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post_proto.Bool'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Err'
      summary: Like Post
      tags:
      - Post
  /post/update:
    put:
      consumes:
      - application/json
      description: This method for Update Post
      parameters:
      - description: Update Post
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/post_proto.UpdatePostReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post_proto.GetPostRes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Err'
      summary: Update Post
      tags:
      - Post
  /register:
    post:
      consumes:
      - application/json
      description: This method register new user
      parameters:
      - description: Register User
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/user_proto.CreateUserReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user_proto.GetUserRes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/user_proto.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user_proto.Err'
      summary: Create New User
      tags:
      - User
  /search/{username}:
    get:
      consumes:
      - application/json
      description: This method search from users
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_proto.UserList'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/user_proto.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user_proto.Err'
      summary: Search User
      tags:
      - User
  /user/{username}:
    get:
      consumes:
      - application/json
      description: This method Get User posts
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_proto.GetUserRes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/user_proto.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user_proto.Err'
      summary: Get Posts
      tags:
      - User
  /user/delete:
    put:
      consumes:
      - application/json
      description: This method for Delete user
      parameters:
      - description: Delete
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/user_proto.DeleteUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_proto.Message'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/user_proto.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user_proto.Err'
      summary: Delete User
      tags:
      - User
  /user/password:
    put:
      consumes:
      - application/json
      description: This method for Update password
      parameters:
      - description: Password update
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/user_proto.UpdatePass'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/user_proto.Message'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/user_proto.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user_proto.Err'
      summary: Update Password
      tags:
      - User
  /user/update:
    put:
      consumes:
      - application/json
      description: This method for Update
      parameters:
      - description: Update
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/user_proto.UpdateUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_proto.GetUserRes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/user_proto.Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/user_proto.Err'
      summary: Update User
      tags:
      - User
swagger: "2.0"
